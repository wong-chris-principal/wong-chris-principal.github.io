{"version":3,"sources":["route/Q1/UserForm.jsx","route/Q1/TableRow.jsx","route/Q1/UserInfo.jsx","route/Q1/UserList.jsx","route/Q1/index.jsx","route/Q2/SubComponent.js","route/Q2/index.js","App.js","index.js","route/Q1/Q1.module.css"],"names":["renderCnt","DisplayBox","UserForm","users","addUserHandler","removeUsersHandler","useState","name","setName","seletecUsers","filter","user","selected","value","onChange","e","target","onClick","length","TableRow","selectHandler","rand","Math","floor","random","console","log","className","styles","Row","type","checked","id","MemorizedTableRow","React","memo","prev","next","UserInfo","SelectedUserInfo","MemorizedUserInfo","UserList","map","index","UserInfoContainer","mockCallAPi","a","Promise","r","idCounter","Q1","setUsers","useEffect","mockFetchData","s","prevState","usersToRemove","clone","findIndex","i","SubComponent","handler","count","setCount","MemoizedSubComponent","obj","setObj","memoizedSubComponentHandler","useCallback","p","style","padding","App","to","path","Q2","rootElement","document","getElementById","ReactDOM","render","module","exports"],"mappings":"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","file":"static/js/main.e31b490c.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nlet renderCnt = 0;\nfunction DisplayBox() {\n  return <div>{renderCnt++}</div>;\n}\n\nfunction UserForm({ users, addUserHandler, removeUsersHandler }) {\n  const [name, setName] = useState(\"\");\n\n  const seletecUsers = users.filter((user) => user.selected);\n\n  return (\n    <div>\n      <div>\n        <DisplayBox />\n        <label>Name:</label>\n        <input value={name} onChange={(e) => setName(e.target.value)} />\n        <button onClick={() => addUserHandler(name)}>Add</button>\n        <button onClick={() => removeUsersHandler(seletecUsers)}>\n          Remove Selected\n        </button>\n      </div>\n      <div>{seletecUsers.length} is selected</div>\n    </div>\n  );\n}\n\nexport default UserForm;\n","import React, { useState } from \"react\";\nimport styles from \"./Q1.module.css\";\n\nexport function TableRow({ user, selectHandler }) {\n  const rand = Math.floor(Math.random() * 101);\n  console.log(\"user is rendered\");\n  return (\n    <tr className={styles.Row} key={user.id}>\n      <td>\n        <input\n          type=\"checkbox\"\n          checked={user.selected}\n          onChange={(e) => selectHandler(user.id, e.target.checked)}\n        />\n      </td>\n      <td>\n        <label>{user.id}</label>\n      </td>\n      <td>\n        <label>{user.name}</label>\n      </td>\n      <td>\n        <label>{rand}</label>\n      </td>\n    </tr>\n  );\n}\n\nexport const MemorizedTableRow = React.memo(TableRow, (prev, next) => {\n  return (\n    prev.user.id === next.user.id && prev.user.selected === next.user.selected\n  );\n});\n","import React from \"react\";\nimport styles from \"./Q1.module.css\";\n\nexport function UserInfo({ user, selectHandler }) {\n  const rand = Math.floor(Math.random() * 101);\n  return (\n    <div\n      key={user.id}\n      className={\n        user.selected\n          ? `${styles.UserInfo} ${styles.SelectedUserInfo}`\n          : `${styles.UserInfo}`\n      }\n      onClick={(e) => selectHandler(user.id, !user.selected)}\n    >\n      <div>{user.name}</div>\n    </div>\n  );\n}\n\nexport const MemorizedUserInfo = React.memo(UserInfo, (prev, next) => {\n  return (\n    prev.user.id === next.user.id && prev.user.selected === next.user.selected\n  );\n});\n","import React from \"react\";\nimport { MemorizedTableRow } from \"./TableRow\";\nimport { MemorizedUserInfo } from \"./UserInfo\";\nimport styles from \"./Q1.module.css\";\n\nfunction UserList({ users, selectHandler }) {\n  const table = (\n    <table>\n      <thead>\n        <tr>\n          <th></th>\n          <th>ID</th>\n          <th>Name</th>\n          <th>Random(0-255)</th>\n        </tr>\n      </thead>\n      <tbody>\n        {users.map((user, index) => (\n          <MemorizedTableRow\n            key={user.id}\n            user={user}\n            selectHandler={selectHandler}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n  const custom = (\n    <div className={styles.UserInfoContainer}>\n      {users.map((user, index) => (\n        <MemorizedUserInfo\n          key={user.id}\n          user={user}\n          selectHandler={selectHandler}\n        />\n      ))}\n    </div>\n  );\n\n  return custom;\n}\nexport default UserList;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport UserForm from \"./UserForm\";\nimport UserList from \"./UserList\";\n\nconst mockCallAPi = async () => {\n  return new Promise((r) => r([{ id: 111, name: \"Chirs\", selected: false }]));\n};\n\nfunction Q1() {\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    const mockFetchData = async () => {\n      setUsers(await mockCallAPi());\n    };\n    mockFetchData();\n  }, []);\n\n  const removeUsersHandler = (usersToRemove) => {\n    const clone = [\n      ...users.filter((user) => {\n        return usersToRemove.findIndex((e) => e.id === user.id) < 0;\n      })\n    ];\n    setUsers(clone);\n  };\n\n  const selectHandler = (id, checked) => {\n    // referenced state will get memorized also, use updater to get the correct state\n    setUsers((prevState) => {\n      const clone = [...prevState];\n      for (let i = 0; i < clone.length; i++) {\n        if (clone[i].id === id) {\n          clone[i] = { ...clone[i], selected: checked };\n        }\n      }\n\n      return clone;\n    });\n  };\n\n  const addUserHandler = (s) => {\n    // Bad\n    // setUsers([\n    //   ...users,\n    //   {\n    //     id: idCounter++,\n    //     name: s,\n    //     selected: false\n    //   }\n    // ]);\n    setUsers((prevState) => {\n      return [\n        ...prevState,\n        {\n          id: idCounter++,\n          name: s,\n          selected: false\n        }\n      ];\n    });\n  };\n  return (\n    <div>\n      <UserForm\n        users={users}\n        addUserHandler={addUserHandler}\n        removeUsersHandler={removeUsersHandler}\n      />\n      <UserList users={users} selectHandler={selectHandler} />\n    </div>\n  );\n}\n\nlet idCounter = 0;\nexport default Q1;\n","import React, { useState } from \"react\";\n\nlet renderCnt = 0;\n\nexport function SubComponent({ handler }) {\n  renderCnt++;\n\n  const [count, setCount] = useState(0);\n\n  const add = () => {\n    setCount(count + 1);\n  };\n\n  return (\n    <div>\n      <div>Render Count: {renderCnt}</div>\n      <div>Count: {count}</div>\n      <button onClick={add}>Add</button>\n    </div>\n  );\n}\nexport const MemoizedSubComponent = React.memo(SubComponent);\n","import { useEffect, useState, useMemo, useCallback } from \"react\";\nimport { SubComponent, MemoizedSubComponent } from \"./SubComponent\";\n\nconst Q1 = () => {\n  const [count, setCount] = useState(0);\n  const [obj, setObj] = useState({ a: 0 });\n  const add = () => {\n    setCount(count + 1);\n    setObj((p) => ({ ...p, a: p.a + 1 }));\n  };\n\n  const subComponentHandler = () => {};\n\n  const memoizedSubComponentHandler = useCallback(subComponentHandler, []);\n\n  return (\n    <div>\n      <h4>\n        Count: {count}, {obj.a}\n      </h4>\n      <button onClick={add}>Add</button>\n      <div style={{ padding: \"30px\" }}>\n        <hr />\n        <SubComponent handler={memoizedSubComponentHandler} />\n        <hr />\n        <MemoizedSubComponent handler={memoizedSubComponentHandler} />\n      </div>\n    </div>\n  );\n};\n\nexport default Q1;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Q1 from \"./route/Q1\";\nimport Q2 from \"./route/Q2\";\n\nexport default function App() {\n  return (\n    <Router>\n      <div>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/Q1\">Q1</Link>\n            </li>\n            <li>\n              <Link to=\"/Q2\">Q2</Link>\n            </li>\n          </ul>\n        </nav>\n\n        {/* A <Switch> looks through its children <Route>s and\n        renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path=\"/Q1\">\n            <Q1 />\n          </Route>\n          <Route path=\"/Q2\">\n            <Q2 />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UserInfoContainer\":\"Q1_UserInfoContainer__3DA8B\",\"UserInfo\":\"Q1_UserInfo__bz9kh\",\"SelectedUserInfo\":\"Q1_SelectedUserInfo__3_2_x\"};"],"sourceRoot":""}